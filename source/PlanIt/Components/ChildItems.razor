@using P4PlanLib.Model

@if (Items != null && Items.Count > 0)
{
    <!-- Child Items Section -->
    <MudStack Spacing="2">
        <MudText Typo="Typo.h6" FontWeight="FontWeight.SemiBold">
            Child Items (@Items.Count)
        </MudText>

        <MudPaper Elevation="3" Class="rounded-xl">
            <!-- Header -->
            <MudTable T="Item" Items="Items" Hover="true" Dense="true" Bordered="false" Outlined="false"
                      Class="bg-white">
                <HeaderContent>
                    <MudTh><MudText Typo="Typo.body2" FontWeight="FontWeight.Medium">Name</MudText></MudTh>
                    <MudTh><MudText Typo="Typo.body2" FontWeight="FontWeight.Medium">Status</MudText></MudTh>
                    <MudTh><MudText Typo="Typo.body2" FontWeight="FontWeight.Medium">Assigned To</MudText></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                            <MudIcon Icon="@Icons.Material.Filled.Circle" Size="Size.Small" Color="Color.Primary" />
                            <MudText Typo="Typo.body2" Color="Color.Primary" FontWeight="FontWeight.Medium"
                                     Class="truncate">
                                @context.Name
                            </MudText>
                        </MudStack>
                    </MudTd>

                    <MudTd>
                        <StatusComponent Status="@context.Status" />
                    </MudTd>

                    <MudTd>
                        <UserComponent Users="@GetChildAssigneeNames(context)"
                                       DisplayMode="UserComponent.UserDisplayMode.Avatars"
                                       MaxAvatars="3" />
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudPaper>
    </MudStack>
}
else
{
    <!-- Description Section -->
    <MudStack Spacing="2" Class="mt-2">
        <MudText Typo="Typo.h6" FontWeight="FontWeight.SemiBold">
            Description
        </MudText>

        <MudPaper Elevation="3" Class="rounded-xl overflow-hidden" Style="flex:1;min-height:250px;max-height:400px;overflow:hidden;display:flex;flex-direction:column;">
            <MudCardContent Class="p-6">
                @if (!string.IsNullOrWhiteSpace(CurrentItem?.Description))
                {
                    <MudText Typo="Typo.body2" Color="Color.Default" Class="whitespace-pre-wrap leading-relaxed">
                        @CurrentItem.Description
                    </MudText>
                }
                else
                {
                    <MudStack AlignItems="AlignItems.Center" JustifyContent="Center" Spacing="1" Class="py-10 text-gray-400">
                        <MudText Typo="Typo.h4">üìù</MudText>
                        <MudText Typo="Typo.body2" Italic="true">
                            No description available for this item.
                        </MudText>
                    </MudStack>
                }
            </MudCardContent>
        </MudPaper>
    </MudStack>
}

@code {
    [Parameter]
    public List<Item>? Items { get; set; }

    [Parameter]
    public Item? CurrentItem { get; set; }

    private IEnumerable<string> GetChildAssigneeNames(Item child)
    {
        if (child.AssignedTo != null && child.AssignedTo.Any())
        {
            return child.AssignedTo
                .Where(a => a.User?.Name != null)
                .Select(a => a.User!.Name!)
                .ToList();
        }
        return Enumerable.Empty<string>();
    }
}
