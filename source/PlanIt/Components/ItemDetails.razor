@using P4PlanLib.Model


<!-- Header -->
<MudStack Row="true" Spacing="2" Class="mt-4">
    <MudText Typo="Typo.h6" FontWeight="FontWeight.Bold">@Item?.Name</MudText>
    <MudSpacer></MudSpacer>
    <MudButton Variant="Variant.Filled"
               Color="Color.Info"
               StartIcon="@Icons.Material.Filled.Share"
               OnClick="@ShareAsync"
               DisableElevation="false">
        @ShareButtonText
    </MudButton>
</MudStack>
<!-- Main Details -->
<MudPaper Class="mt-4">
    <!-- Table: Combined View -->
    <MudTable T="object" Items="@(new List<object> { new object() })" Dense="true" Hover="false" Bordered="true" Outlined="true"
              Class="rounded-lg overflow-hidden bg-white w-full ">
        <ChildRowContent Context="_">
            <!-- Helix Plan App -->
            <MudTr>
                <MudTd Class="bg-lightgray" Style="width:20%;">Helix Plan App</MudTd>
                <MudTd>
                    <MudLink Href="@Item?.GetItemLink()" Target="_blank" Class="text-primary font-medium">
                        Open in Helix Plan web app →
                    </MudLink>
                </MudTd>
            </MudTr>

            <!-- Assignee -->
            <MudTr>
                <MudTd Class="bg-lightgray">Assignee</MudTd>
                <MudTd>
                    <UserComponent Users="@GetAssigneeNames()" DisplayMode="UserComponent.UserDisplayMode.Tags" />
                </MudTd>
            </MudTr>

            <MudTr>
                <MudTd ColSpan="2" Class="pa-0">
                    <MudTable T="object" Items="@(new List<object> { new object() })"
                              Dense="false" Hover="false" Bordered="false" Outlined="false"
                              Class="bg-gray-50">
                        <ChildRowContent Context="inner">
                            <MudTr>
                                <MudTd Class="bg-lightgray" Style="width:20%;">Priority</MudTd>
                                <MudTd Class="bg-lightgray">Est. Days</MudTd>
                                <MudTd Class="bg-lightgray">Status</MudTd>
                                @if (Item?.CommittedTo != null)
                                {
                                    <MudTd> Committed To </MudTd>
                                }
                            </MudTr>
                            <MudTr>
                                <MudTd>@(Item?.BeautifulPriority ?? "—")</MudTd>
                                <MudTd>@(Item?.EstimatedDays.ToString() ?? "—")</MudTd>
                                <MudTd><StatusComponent Status="@Item?.Status" /></MudTd>
                                @if (Item?.CommittedTo != null)
                                {
                                    <MudTd>
                                        <MudLink Href="@Item.CommittedTo.ItemLink" Target="_blank" Class="text-primary font-medium"> @Item.CommittedTo.Name → </MudLink>
                                    </MudTd>
                                }
                            </MudTr>
                        </ChildRowContent>
                    </MudTable>
                </MudTd>
            </MudTr>
        </ChildRowContent>
    </MudTable>
</MudPaper>


@code {
    [Parameter]
    public Item? Item { get; set; }

    [Parameter]
    public string ShareButtonText { get; set; } = "Share";

    [Parameter]
    public EventCallback ShareAsync { get; set; }

    private IEnumerable<string> GetAssigneeNames()
    {
        if (Item?.AssignedTo != null && Item.AssignedTo is IList<AssignedTo> atList && atList.Count > 0)
        {
            return atList
                .Where(a => a != null && a.User != null && !string.IsNullOrWhiteSpace(a.User.Name))
                .Select(a => a.User!.Name!)
                .ToList();
        }
        return Enumerable.Empty<string>();
    }
}