@page "/"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims
@using PlanIt.Services.Interfaces
@using PlanIt.Services.Authentication
@inject IP4PlanClientProvider P4PlanClientProvider
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager
@inject IAppAuthenticationService AuthService

<PageTitle>Home</PageTitle>

<h1>PlanIt</h1>

@if ((HttpContextAccessor.HttpContext?.User?.Identity?.IsAuthenticated ?? false) && P4PlanClientProvider.GetP4PlanClient(HttpContextAccessor.HttpContext?.User.Claims.First(c => c.Type == ClaimTypes.Email).Value) != null)
{
    <p>Connected to P4 Plan as @HttpContextAccessor.HttpContext?.User.Claims.First(c => c.Type == ClaimTypes.Name).Value</p>
}
else
{
    <p>Please connect to P4 Plan</p>
    <MudButton Variant="Variant.Filled" Href="/login">Connect</MudButton>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // If not authenticated and we're using dummy client, auto-authenticate
        if (!IsUserAuthenticated())
        {
            if (AuthService is DevelopmentAuthenticationService devAuthService)
            {
                var context = HttpContextAccessor.HttpContext;
                if (context != null)
                {
                    try
                    {
                        await devAuthService.AutoAuthenticateAsync(context);
                        // Force a refresh to update the UI with authentication state
                        NavigationManager.NavigateTo("/", true);
                    }
                    catch (Exception ex)
                    {
                        // Log the error but don't crash the page
                        Console.WriteLine($"Auto-authentication failed: {ex.Message}");
                    }
                }
            }
        }
    }

    private bool IsUserAuthenticated()
    {
        return HttpContextAccessor.HttpContext?.User?.Identity?.IsAuthenticated ?? false;
    }
}